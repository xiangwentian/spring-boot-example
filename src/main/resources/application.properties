#数据库相关配置
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/sql_test
#spring.datasource.username=root
#spring.datasource.password=123456
#spring.datasource.max-idle=10
#spring.datasource.max-wait=10000
#spring.datasource.min-idle=5
#spring.datasource.initial-size=5

server.port=8090

logging.level.org.springframework.web=INFO
logging.level.guru.springframework.controllers=DEBUG
logging.level.org.hibernate=ERROR
logging.file.path=logs/spring-boot-logging.log

#===kafka===
#指定kafka 代理地址，可以多个
spring.kafka.bootstrap-servers=192.168.118.130:9092
#===provder===
spring.kafka.producer.retries=0
#批量发送消息的数量
spring.kafka.producer.batch-size=16384
spring.kafka.producer.buffer-memory=33554432
#指定消息key和消息体的编码方式
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#===consumer===
#指定默认消费者group id
spring.kafka.consumer.group-id=user-log-group
spring.kafka.consumer.auto-offset-reset=earliest
#开启手动提交offset enable-auto-commit设为false
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.auto-commit-interval=100

#指定消息key和消息体的编码方式
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

#spring.kafka.consumer.max-poll-records=50
#listener,enable-auto-commit=false时设置下面配置
#设置具体模式
spring.kafka.listener.ack-mode=MANUAL
#MANUAL_IMMEDIATE
#spring.kafka.listener.ack-count=10


#redis配置
#Redis服务器地址
#spring.redis.host=192.168.118.130
#spring.redis.port=6379
#spring.redis.maxWaitMillis=10000
#spring.redis.maxTotal=600
#spring.redis.testOnBorrow=true
#spring.redis.testOnReturn=true
#spring.redis.timeout=5000
# 连接池中的最大空闲连接
#spring.redis.maxIdle=100
